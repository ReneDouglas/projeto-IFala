services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    container_name: ifala-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ifala
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
      # - ./scripts/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 30s
      timeout: 10s
      retries: 3
  ifala-frontend:
    build:
      context: ./apps/ifala-frontend
      dockerfile: Dockerfile
    container_name: ifala-frontend
    environment:
      - NODE_ENV=development
    ports:
      - '5173:5173'
    volumes:
      - ./apps/ifala-frontend:/app
      - /app/node_modules
  ifala-backend:
    # working_dir: /app
    # image: bellsoft/liberica-runtime-container:jre-21-crac-slim-glibc
    build:
      context: ./apps/ifala-backend
      dockerfile: Dockerfile
    container_name: ifala-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ifala
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_PROFILES_ACTIVE: docker
      JAVA_TOOL_OPTIONS:
        '-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=*:5005'
    ports:
      - '8080:8080'
      - '5005:5005'
    #volumes:
    # - ./apps/ifala-backend/target/ifala-backend-0.0.1-SNAPSHOT.jar:/app/ifala-api.jar
    # entrypoint: ['java', '-jar', '/app/ifala-api.jar']
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  pgdata:
