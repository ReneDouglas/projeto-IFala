spring.application.name=ifala

spring.datasource.url=jdbc:postgresql://localhost:5432/ifala
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.hikari.auto-commit=false
spring.jpa.properties.hibernate.jdbc.time_zone=GMT
spring.jpa.properties.timezone.default_storage=NORMALIZE
spring.jpa.properties.hibernate.type.preferred_instant_jdbc_type=TIMESTAMP
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
# Ativar cache de segundo nível (opcional). É necessário configurar um provedor de cache, como EhCache ou Hazelcast.
#spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=false
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.query.in_clause_parameter_padding=true
spring.jpa.properties.hibernate.query.fail_on_pagination_over_collection_fetch=true
spring.jpa.properties.hibernate.query.plan_cache_max_size=4096
spring.jpa.hibernate.ddl-auto=none

spring.jpa.open-in-view=false

# Configurações do Flyway para migrations
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=1
spring.flyway.locations=classpath:db/migration


# configuracao dependencia bucket4J Rate Limiting
bucket4j.enabled=true
bucket4j.filters[0].cache-name=buckets
bucket4j.filters[0].url=^/api/v1/public/denuncias$
bucket4j.filters[0].http-method=POST        # Apenas para o método POST

# 3 requisições por segundo
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=3
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=seconds

# mensagem de erro quando o limite é excedido
bucket4j.filters[0].http-response-body={"error": "Muitas tentativas. Por favor, tente novamente mais tarde."}
# Configurações base do Keycloak - específicas são sobrescritas por profile
keycloak.auth-server-url=http://localhost:9090
keycloak.realm=IFala
keycloak.resource=app_ifala

# Keycloak Admin API (Credenciais para o Realm MASTER)
keycloak.admin.client-id=admin-cli
keycloak.admin.username=admin
keycloak.admin.password=senha

# OAuth2 Resource Server (Validação de JWT)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9090/realms/IFala

# Habilita os endpoints de monitoramento para o Prometheus
management.endpoints.web.exposure.include=health,prometheus

# Micrometer: habilita histogramas para métricas HTTP (necessário para PR95/PR99)
management.metrics.distribution.percentiles-histogram.http.server.requests=true
# (Opcional) Define SLOs/buckets customizados para melhor resolução dos quantis
management.metrics.distribution.slo.http.server.requests=50ms,100ms,250ms,500ms,1s,2s

# A ser configurado em produção @Rene 
# Google ReCaptcha v2 Settings
# recaptcha.secret=CHAVE_SECRETA_DO_RECAPTCHA
# recaptcha.url=https://www.google.com/recaptcha/api/siteverify
recaptcha.secret=${RECAPTCHA_SECRET_KEY}
recaptcha.url=https://www.google.com/recaptcha/api/siteverify
